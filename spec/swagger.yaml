swagger: '2.0'

info:
  version: "1.0.0"
  title: ACME Delivery service backend API
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT

schemes: [ https ]
host: "backend.acme-company.site"
basePath: "/"

security:
- Token: []

paths:
  /account/login:
    post:
      summary: "Authenticate user with login name and password."
      tags:
      - account
      consumes:
      - 'multipart/form-data'
      parameters:
      - name: 'email'
        in: formData
        type: string
      - name: 'password'
        in: formData
        type: string
      # Override: this particular method does not require any top-level security scheme.
      security: []
      responses:
        '200':
          description: "User succesfully logged in."
          schema:
            type: object
            required:
            - token
            properties:
              token:
                type: string
                description: |
                  Authorization token to be used in the `Authorization` header for secured endpoints.
          examples:
            token: "4296c04b40a2e4da526f55d7b1f1dbc358a613b4"
        '400':
          description: "Bad request or invalid credentials"
          schema:
            $ref: '#/definitions/ErrorModel'
          examples:
            'Bad Request':
              msg: "Please provide both email and password"
            'Invalid Credentials':
              msg: "Invalid login credentials"

  /account/logout:
    post:
      summary: "Log out current user."
      tags:
      - account
      responses:
        '200':
          description: >
            Current user succesfully logged out of system.
            Authorization token will no longer be valid.
        '401':
          $ref: '#/responses/Unauthorized'

  /account/info:
    get:
      summary: "Get information about current user."
      tags:
      - account
      responses:
        '200':
          description: "OK"
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/Unauthorized'

  /orders/list:
    get:
      summary: "Get filtered list of orders."
      tags:
      - web
      consumes:
      - 'multipart/form-data'
      parameters:
      - name: 'offset'
        in: formData
        type: integer
        required: false
      - name: 'limit'
        in: formData
        type: integer
        required: false
      responses:
        '200':
          description: "OK"
          schema:
            type: object
            required:
            - total_count
            - results
            properties:
              total_count:
                type: integer
                description: "Total count of objects after filtering but before pagination."
              results:
                type: array
                items:
                  $ref: '#/definitions/OrderDelivery'
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          $ref: '#/responses/Unauthorized'

  /driver/co-contact:
    get:
      summary: "Get contacts of available Control Operator for driver's current location."
      tags:
      - mobile
      responses:
        '200':
          description: "OK"
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/Unauthorized'

  /driver/{id}/info:
    parameters:
    - $ref: '#/parameters/DriverID'
    get:
      summary: "Get information about given driver."
      tags:
      - mobile
      - web
      responses:
        '200':
          description: "OK"
          schema:
            description: >
              All usual User's fields plus Delivery Operator specific
              `location` and `location_update_time` objects.
            allOf:
            - $ref: '#/definitions/User'
            - $ref: '#/definitions/DeliveryOperator'
        '401':
          $ref: '#/responses/Unauthorized'

  /driver/{id}/pending-orders:
    parameters:
    - $ref: '#/parameters/DriverID'
    get:
      summary: "Get pending orders of given Delivery Operator."
      tags:
      - mobile
      - web
      responses:
        '200':
          description: "OK"
          schema:
            type: object
            required:
            - total_count
            - results
            properties:
              total_count:
                type: integer
                description: "Total count of pending orders."
              results:
                type: array
                items:
                  $ref: '#/definitions/Order'
        '401':
          $ref: '#/responses/Unauthorized'

  /driver/{id}/current-orders:
    parameters:
    - $ref: '#/parameters/DriverID'
    get:
      summary: "Get currrent orders of given Delivery Operator."
      tags:
      - mobile
      - web
      responses:
        '200':
          description: "OK"
          schema:
            type: object
            required:
            - total_count
            - results
            properties:
              total_count:
                type: integer
                description: "Total count of current orders."
              results:
                type: array
                items:
                  $ref: '#/definitions/Order'
        '401':
          $ref: '#/responses/Unauthorized'

  /driver/{id}/location:
    parameters:
    - $ref: '#/parameters/DriverID'
    get:
      summary: "Get last known location and time of given driver (a.k.a. Delivery Operator)."
      tags:
      - mobile
      - web
      responses:
        '200':
          description: "OK"
          schema:
            $ref: '#/definitions/DeliveryOperator'
        '401':
          $ref: '#/responses/Unauthorized'
    post:
      summary: "Update last known location (with current timestamp) for given driver (a.k.a. Delivery Operator)."
      tags:
      - mobile
      - web
      consumes:
      - 'multipart/form-data'
      parameters:
      - name: 'longitude'
        in: formData
        type: number
        required: true
      - name: 'latitude'
        in: formData
        type: number
        required: true
      responses:
        '200':
          description: "Updated"
          schema:
            $ref: '#/definitions/DeliveryOperator'
        '400':
          description: "Invalid parameters"
        '401':
          $ref: '#/responses/Unauthorized'

parameters:
  DriverID:
    name: 'id'
    in: path
    required: true
    type: integer
    description: "Driver (a.k.a. Delivery Operator) ID"


produces:
- 'application/json'

responses:
  Unauthorized:
    description: "Unauthorized: User not logged in."
    schema:
      $ref: '#/definitions/ErrorModel'

definitions:
  User:
    type: object
    required:
    - id
    - region
    - email
    - contacts
    properties:
      id:
        type: integer
      region:
        $ref: '#/definitions/Region'
      email:
        type: string
        format: email
      contacts:
        $ref: '#/definitions/Contact'
      avatar_url:
        type: string
        format: uri

  Contact:
    type: object
    required:
    - phone_number
    properties:
      address:
        type: string
      phone_number:
        type: string
      additional_info:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      position:
        type: string
      company:
        type: string

  Order:
    type: object
    required:
    - id
    - delivery_period
    - priority
    - address_from
    - address_to
    - status
    properties:
      id:
        type: integer
      delivery_period:
        $ref: '#/definitions/TimeSpan'
      priority:
        type: integer
      address_from:
        $ref: '#/definitions/Address'
      address_to:
        $ref: '#/definitions/Address'
      status:
        $ref: '#/definitions/OrderStatus'

  OrderDelivery:
    type: object
    required:
    - id
    - delivery_period
    - priority
    - address_from
    - address_to
    - status
    - is_assigned
    properties:
      id:
        type: integer
      delivery_period:
        $ref: '#/definitions/TimeSpan'
      priority:
        type: integer
      address_from:
        $ref: '#/definitions/Address'
      address_to:
        $ref: '#/definitions/Address'
      status:
        $ref: '#/definitions/OrderStatus'
      is_assigned:
        type: boolean
      delivery_operator:
        $ref: '#/definitions/User'

  TimeSpan:
    type: object
    required:
    - start
    - end
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time

  Address:
    type: object
    required:
    - address
    - location
    properties:
      address:
        type: string
      location:
        $ref: '#/definitions/Location'

  Location:
    type: object
    required:
    - latitude
    - longitude
    properties:
      latitude:
        type: number
      longitude:
        type: number


  OrderStatus:
    type: string
    enum:
    - 'created'
    - 'approved'
    - 'en_route'
    - 'stored'
    - 'delivered'

  Region:
    type: string
    enum:
    - 'EU'
    - 'RU'
    - 'CH'
    - 'UK'

  DeliveryOperator:
    description: "Delivery Operator extension for User object."
    type: object
    required:
    - location
    - location_update_time
    properties:
      location:
        $ref: '#/definitions/Location'
      location_update_time:
        type: string
        format: 'date-time'

  ErrorModel:
    type: object
    required:
    - msg
    properties:
      msg:
        type: string
        description: "Brief description of the error."

securityDefinitions:
  Token:
    type: apiKey
    name: Authorization
    in: header
    description: >
      Once obtained through /accounts/login method, token may be used in subsequent requests to
      protected methods in the form of `Authorization: Token <your_token>` header.

tags:
- name: "account"
  description: |
    Methods related to account/session management.
- name: "mobile"
  description: |
    Methods related to mobile application for Delivery Operators.
- name: "web"
  description: |
    Methods related to web-app functionality.
